
--  Header file for function TaskWithLoop in SDL language
--  Component type : FALSE
--  Instance of :
--  Generated by TASTE on 2022-01-17 14:36:23
--  Context Parameters present : NO
--  Provided interfaces : trigger
--  Required interfaces :
--  User-defined properties for this function:
--     * TASTE::Is_Component_Type = false
--     * TASTE_IV_Properties::FPGA_Configurations = AllModes
--  DO NOT EDIT THIS FILE, IT WILL BE OVERWRITTEN DURING THE BUILD
/* CIF Keep Specific Geode ASNFilename 'dataview-uniq.asn' */
use Datamodel;

system Taskwithloop;

   signal trigger;



   channel c
      from env to Taskwithloop with trigger;
   endchannel;

   block Taskwithloop;

      signalroute r
      from env to Taskwithloop with trigger;
      connect c and r;

      /* CIF PROCESS (250, 150), (150, 75) */
process Taskwithloop;
    /* CIF TEXT (664, 109), (267, 140) */
    DCL y MyInteger;
    DCL my_arr MyArray;
    DCL my_data MyData;
    /* CIF ENDTEXT */
    /* CIF START (320, 10), (70, 35) */
    START;
        /* CIF NEXTSTATE (320, 60), (70, 35) */
        NEXTSTATE Wait;
    /* CIF state (450, 10), (70, 35) */
    state Wait;
        /* CIF input (450, 65), (70, 35) */
        input trigger;
            /* CIF task (450, 120), (70, 35) */
            task y := 0;
            /* CIF task (402, 170), (164, 72) */
            task for x in RANGE(0, 10, 2):
y := y + x
y := Y * 2
endfor;
            task for x in RANGE(1, 3):
y := y + x
endfor;
            task for x in RANGE(4):
y := y + x
endfor;
            task for x in RANGE(length(my_arr)):
my_arr(x) := y
endfor;
            task my_data := {1, 2, 1, 2};
            task for x in RANGE(length(my_data)):
y := y + x
endfor;
            /* CIF NEXTSTATE (450, 273), (70, 35) */
            NEXTSTATE Wait;
    endstate;
endprocess Taskwithloop;
   endblock;
endsystem;
