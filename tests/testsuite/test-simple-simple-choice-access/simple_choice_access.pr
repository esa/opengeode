--  Header file for function TaskWithLoop in SDL language
--  Component type : FALSE
--  Instance of :
--  Generated by TASTE on 2022-01-17 14:36:23
--  Context Parameters present : NO
--  Provided interfaces : trigger
--  Required interfaces :
--  User-defined properties for this function:
--     * TASTE::Is_Component_Type = false
--     * TASTE_IV_Properties::FPGA_Configurations = AllModes
--  DO NOT EDIT THIS FILE, IT WILL BE OVERWRITTEN DURING THE BUILD
/* CIF Keep Specific Geode ASNFilename 'dataview-uniq.asn' */
use Datamodel;

system Simplechoiceaccess;

   signal ping (MyUnion);

   signal pong (MyInteger);

   channel c
      from env to Simplechoiceaccess with ping;
      from Simplechoiceaccess to env with pong;
   endchannel;

   block Taskwithloop;

      signalroute r
      from env to Actuator with ping;
      from Actuator to env with pong;
      connect c and r;

      /* CIF PROCESS (250, 150), (150, 75) */
process Simplechoiceaccess;
    /* CIF TEXT (399, 241), (267, 140) */
    -- Text area for declarations and comments

    dcl my_data MyUnion;
    dcl my_int MyInteger;
    /* CIF ENDTEXT */
    /* CIF START (320, 10), (70, 35) */
    START;
        /* CIF NEXTSTATE (320, 60), (70, 35) */
        NEXTSTATE Wait;
    /* CIF state (755, 202), (70, 35) */
    state Wait;
        /* CIF input (735, 257), (107, 35) */
        input ping(my_data);
            /* CIF decision (724, 312), (129, 50) */
            decision present(my_data);
                /* CIF ANSWER (710, 382), (70, 23) */
                (packet):
                    /* CIF task (658, 425), (172, 35) */
                    task my_int := my_data.packet;
                /* CIF ANSWER (850, 382), (70, 23) */
                (dummy):
                    /* CIF task (842, 425), (86, 35) */
                    task my_int := 0;
            enddecision;
            /* CIF output (738, 476), (101, 35) */
            output pong(my_int);
            /* CIF NEXTSTATE (754, 531), (70, 35) */
            NEXTSTATE Wait;
    endstate;
endprocess Simplechoiceaccess;
   endblock;
endsystem;
